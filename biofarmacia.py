# -*- coding: utf-8 -*-
"""Biofarmacia.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JbNM-7Yke2zx_kNPYcqeu5Z4HK7D7aZa
"""

# Copyright (c) 2023 Estefani Yarazet Rodriguez Morales
import math
import matplotlib.pyplot as plt

from typing import Mapping
# Copyright (c) 2023 autor: Estefani Yarazet Rodriguez Morales y Jesus Covarrubias
import math
import matplotlib.pyplot as plt

c0 =float(input("Ingresar la dosis aplicada (en mg):  "))
FormaAdminis = str(input("Ingrese la forma de administracion(infusion o bolo): "))
VolumDisti =float(input("Ingrese el volumen de distribucion (en litros): "))
t_medio =(input("Ingrese el tiempo de vida medio (en horas): "))
t =int(input("Ingrese el intervalo de dosificacion (en horas): "))
num_dosis =int(input("Ingrese el numero de dosis: "))
E=(22*8)/1
cmin = 1

k_el = 0.693 /float(t_medio)
Cl= k_el*VolumDisti
C_ee= c0/Cl
R= 1/(1-math.exp(-k_el*t))

if FormaAdminis == "infusion":
  cmax= C_ee/R
  def intervalo(c):
        lista = []
        for i in range(0,t+1):
            cp = ((c0/VolumDisti)/k_el)*(1- math.exp(-k_el * i))
            cp = round(cp,2)
            print(cp)
            lista.append(cp)

        return lista
  lista = intervalo(c0)
  print(lista)
  plt.plot(lista)
  plt.axhline (y=cmin,color="g", linestyle="--", label="concentracion minima")
  plt.axhline (y=cmax,color="r", linestyle="--", label="concentracion maxima toxica")
  plt.show()
elif FormaAdminis == "bolo":
  def intervalo(c):
      lista = []
      for i in range(0,t+1):
          cp = c * math.exp(-k_el * i)
          cp = round(cp,2)
          print(cp)
          lista.append(cp)
      #print(lista)
      return cp, lista

  lista = []
  remanente = 0
  for cantidad in range (0,num_dosis):
    remanente, lst = intervalo(c0+remanente)
    print("remanente:", remanente)
    lista.extend(lst)
  cmax=num_dosis+(c0+remanente)
  print(lista)
  plt.plot(lista)
  plt.axhline (y=cmin,color="g", linestyle="--", label="concentracion minima")
  plt.axhline (y=cmax,color="r", linestyle="--", label="concentracion maxima toxica")
  plt.show()

"""calculo orden 0

$Cp= K_0 (t-t_0)$

$C^{ee}= \frac{Dosis}{Cl*t}$

$C_(max)= \frac{C^{ee}}R$

$Q = Q0- K*t$


"""

#bolo
cmax= c0
def intervalo(c):
    lista = []
    for i in range(0,t+1):
        k_el = 0.693 / t_medio
        cp = c * math.exp(-k_el * i)
        cp = round(cp,2)
        print(cp)
        lista.append(cp)
    #print(lista)
    return cp, lista

lista = []
remanente = 0
for dosis in range (0,num_dosis):
  remanente, lst = intervalo(c0+remanente)
  print("remanente:", remanente)
  lista.extend(lst)

print(lista)
plt.plot(lista)
plt.axhline (y=cmin,color="g", linestyle="--", label="concentracion minima")
plt.axhline (y=cmax,color="r", linestyle="--", label="concentracion maxima toxica")
plt.show()

import math
import matplotlib.pyplot as plt
#Datos
c0 =float(input("Ingresar la dosis aplicada (en mg):  "))
FormaAdminis = str(input("Ingrese la forma de administracion(infusion o bolo): "))
VolumDisti =float(input("Ingrese el volumen de distribucion (en litros): "))
t_medio =(input("Ingrese el tiempo de vida medio (en horas): "))
t =int(input("Ingrese el intervalo de dosificacion (en horas): "))
num_dosis =int(input("Ingrese el numero de dosis: "))

cmin = 1

#calclulo
k_el = 0.693 /float(t_medio)
Cl= k_el*VolumDisti
C_ee= c0/Cl #94.10
R= 1/(1-math.exp(-k_el*t))

#Infusion
if FormaAdminis == "infusion":
  cmax= C_ee/R
  def intervalo(c):
      lista = []
      for i in range(0,t+1):
          cp =((c0/VolumDisti)/k_el)*(1- math.exp(-k_el * i))
          cp = round(cp,2)
          print(cp,)
          lista.append(cp,)
    #print(lista)
      return lista

Q_el= 0
listal =[]
c=[-1]
for i in range(Q_el, t+1):
  cp, lst= intervalo (c)
  ce= (Q_el * math.exp(-k_el * (i+1)))
    #ce=(Q-k*(tiempo))
  ce= round(ce,2)
  print("Q_e",Q_el)
  listal.extend(lst)

print(lista)
plt.plot(lista)
plt.axhline (y=cmin,color="g", linestyle="--", label="concentracion minima")
plt.axhline (y=cmax,color="r", linestyle="--", label="concentracion maxima toxica")
plt.show()

import math
import matplotlib.pyplot as plt

# Datos
c0 = float(input("Ingresar la dosis aplicada (en mg): "))
FormaAdminis = str(input("Ingrese la forma de administracion (infusion o bolo): "))
VolumDisti = float(input("Ingrese el volumen de distribucion (en litros): "))
t_medio = float(input("Ingrese el tiempo de vida medio (en horas): "))
t = int(input("Ingrese el intervalo de dosificacion (en horas): "))
num_dosis = int(input("Ingrese el numero de dosis: "))

cmin = 1

# CÃ¡lculos
k_el = 0.693 / float(t_medio)
Cl = k_el * VolumDisti
C_ee = c0 / Cl
R = 1 / (1 - math.exp(-k_el * t))

# Grafica
if FormaAdminis == "infusion":
    cmax = C_ee / R

    def intervalo(c):
        lista = []
        for i in range(0, t + 1):
            cp = ((c / VolumDisti) / k_el) * (1 - math.exp(-k_el * i))
            cp = round(cp, 2)
            print(cp)
            lista.append(cp)
        # print(lista)
        return lista

    lista = intervalo(c0)
    print(lista)
    plt.plot(lista, )
    plt.axhline(y=cmin, color="g", linestyle="--", label="concentracion minima")
    plt.axhline(y=cmax, color="r", linestyle="--", label="concentracion maxima toxica")

    # Segundo bucle
    for i in range(t + 1, 2 * t + 1):
        c0_in= math.log(lista[-1])
        c0_e= math.exp(c0)
        AUC= c0_e/k_el
        kv= c0/AUC
        cp= lista[-1]-kv-(k_el*i/2)
        #Cp= (lista[-1])*math.exp(k_el*(i/2))
        #cp = (lista[-1])* math.exp(-k_el*i)
        cp = round(cp, 2)
        print(cp)
        lista.append(cp)

    print(lista)
    plt.plot(lista,)
    plt.legend()
    plt.show()